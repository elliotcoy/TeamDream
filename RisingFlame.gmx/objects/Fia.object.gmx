<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>FiaHitBox</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>onGround = 1
flying = 0
voice = instance_create(x,y,theVoice)
skin = instance_create(x,y,FiaSkin)
shadow = instance_create(x,y,FiaShadow)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>skin.x = x
skin.y = y
/*
shadow.x = x
shadow.y = y
shadow.sprite_index = skin.sprite_index
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Physics

//Gravity
vspeed+=2*global.timeScale;

//Max Velocity
if(vspeed&gt; 40){ vspeed= 40;}
if(vspeed&lt;-40){ vspeed=-40;}
if(hspeed&gt; 16){ hspeed= 16;}
if(hspeed&lt;-16){ hspeed=-16;}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Controls


if(leftButton())
{   if(rightButton()){
        friction(onGround)
        if(onGround){skin.sprite_index = Idle}
    }
    else{
    //MOVE LEFT
        if(onGround){skin.sprite_index = Walk}
        skin.image_xscale = -1
        hspeed -= 2*global.timeScale
        if(hspeed &gt; 0){
            hspeed -= 2*global.timeScale
        }
    }
}
else{
    //MOVE RIGHT
    if(rightButton()){
        if(onGround){skin.sprite_index = Walk}
        skin.image_xscale = 1
        hspeed += 2*global.timeScale
        if(hspeed &lt; 0){
            hspeed += 2*global.timeScale
        }
    }
    else{
        friction(onGround)
        if(onGround){skin.sprite_index = Idle}
    }
}

//JUMP
if(onGround){
    flying = false
    if(actionButtonPressed()){
        vspeed = -28*global.timeScale
        onGround = false
    }
}

//Glide
else{
    skin.sprite_index = Jump
    onGround = false
    if(actionButtonPressed()){
        flying = true
    }
    else if(actionButtonReleased()){
        flying = false
    }
    if(flying){
        skin.sprite_index = Fly
        if(vspeed&lt;0){ vspeed=0 }
        vspeed = clamp(vspeed-2,4,6)
        hspeed = clamp(hspeed+skin.image_xscale * 8 ,-32,32)
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Collision

landCollision(groundObject);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
