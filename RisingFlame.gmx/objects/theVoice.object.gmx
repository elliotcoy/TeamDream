<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>theVoiceSprite</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lightSize = 1024
light_create(lightSize,512,100)
light_use_gradient(0)
light_create(lightSize,512,100)

player = instance_nearest(x,y,Fia)
positionCounter = 30

xx = -128
yy = -128

x = player.x + xx - lightSize/2
y = player.y + yy - lightSize/2

skin = instance_create(x,y,theVoiceSkin)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!positionCounter--){
    xx = random_range(-128,128)
    yy = random_range(-64,-128)
    positionCounter = 30;
}

/*
if(x &lt; (player.x + xx - lightSize/2)){
    hspeed = distance_to_point(xx+player.x-lightSize/2,y)/8
}
else{
    hspeed = -distance_to_point(xx+player.x-lightSize/2,y)/8
}
if(y &lt; (player.y + yy - lightSize/2)){
    vspeed = distance_to_point(x,yy+player.y-lightSize/2)/8
}
else{
    vspeed = -distance_to_point(x,yy+player.y-lightSize/2)/8
}
*/
//landCollision(groundObject)
//landCollision2(groundObject, lightSize/2, lightSize/2)

x += ((xx + player.x - lightSize/2) - x)/8
y += ((yy + player.y - lightSize/2) - y)/8

skin.x = x + lightSize/2;
skin.y = y + lightSize/2;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
